<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/2/2023 2:37:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC2023"
  DTS:CreatorName="PC2023\DELL"
  DTS:DTSID="{004863AC-CC1A-48E6-B93F-BF2DEA044022}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="2057"
  DTS:ObjectName="Step1-LoadDimCurrency"
  DTS:PackageType="5"
  DTS:VersionBuild="46"
  DTS:VersionGUID="{915018F7-2952-4466-AEE0-4468ADC05C89}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[pc2023\pc2023.BusinessDB2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{74FFDF0D-27FB-4695-85D7-C08C1046244A}"
      DTS:ObjectName="pc2023\pc2023.BusinessDB2">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Package::InitialCatalog_Param]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=pc2023\pc2023;Initial Catalog=BusinessDB2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{74FFDF0D-27FB-4695-85D7-C08C1046244A}pc2023\pc2023.BusinessDB2;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3E2920D9-92CD-40FD-BE3B-6996F8DF562D}"
      DTS:ObjectName="InitialCatalog_Param">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">BusinessDB2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BEBD8C33-155B-44DF-A537-3DDFAEF3600D}"
      DTS:ObjectName="XmlDataValidation_Param">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\SSIS\Exercices\MSBIProject\Data\schema.xsd</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{467800B7-6BF2-4FF7-8615-E33F4B393457}"
      DTS:ObjectName="XmlData_Param">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\SSIS\Exercices\MSBIProject\Data\currency.xml</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D155664C-3DFD-4C10-92A9-68BF28E9BD84}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="xmlcvalidationfilepath">
      <DTS:VariableValue
        DTS:DataType="8">C:\SSIS\Exercices\MSBI-Project\schema.xsd</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{346141BD-BE16-4A8C-9E5E-625CBF131363}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="xmlfilepath">
      <DTS:VariableValue
        DTS:DataType="8">C:\SSIS\Exercices\MSBI-Project\currency.xml</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A0AD6AC9-6B86-4085-AACD-297B7A9ECDC4}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="[XML Source].[XMLData]">@[$Package::XmlData_Param]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="[XML Source].[XMLSchemaDefinition]">@[$Package::XmlDataValidation_Param]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DimCurrency]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[pc2023\pc2023.BusinessDB2]"
                  connectionManagerRefId="Package.ConnectionManagers[pc2023\pc2023.BusinessDB2]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CurrencyKeyOutput]"
                      cachedDataType="i4"
                      cachedName="CurrencyKeyOutput"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyKey]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyKeyOutput]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CurrencyAlternateKeyOutput]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CurrencyAlternateKeyOutput"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyAlternateKey]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyAlternateKeyOutput]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CurrencyNameOutput]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CurrencyNameOutput"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyName]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyNameOutput]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyKey]"
                      dataType="i4"
                      name="CurrencyKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyAlternateKey]"
                      dataType="wstr"
                      length="3"
                      name="CurrencyAlternateKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyName]"
                      dataType="wstr"
                      length="50"
                      name="CurrencyName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    int index = 0;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.CurrencyKeyOutput = index++;
        Row.CurrencyAlternateKeyOutput = Row.CurrencyKey;
        Row.CurrencyNameOutput = Row.CurrencyName;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CurrencyKey
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool CurrencyKey_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CurrencyName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CurrencyName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 CurrencyKeyOutput
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CurrencyKeyOutput_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CurrencyAlternateKeyOutput
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CurrencyAlternateKeyOutput_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CurrencyNameOutput
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CurrencyNameOutput_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties.Settings.get_Default():SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties.Sett" +
    "ings")]

namespace SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_7a1b4726a8534d179edbcd0afa11c5c2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_7a1b4726a8534d179edbcd0afa11c5c2</msb:DisplayName>
    <msb:ProjectId>{E47D5680-9DF3-46DD-8AF6-EE86F31B320A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_7a1b4726a8534d179edbcd0afa11c5c2.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7a1b4726a8534d179edbcd0afa11c5c2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7a1b4726a8534d179edbcd0afa11c5c2")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7a1b4726a8534d179edbcd0afa11c5c2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{12C74598-A120-4453-ADE6-36A8BCFB0A85}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7a1b4726a8534d179edbcd0afa11c5c2</RootNamespace>
    <AssemblyName>SC_7a1b4726a8534d179edbcd0afa11c5c2</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7a1b4726a8534d179edbcd0afa11c5c2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7a1b4726a8534d179edbcd0afa11c5c2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIlv82QAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAvjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGwzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MwAAAAAAAEgAAAACAAUAPCIAAHgQAAABAAAAAAAAALQyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAMAAAAAEAABEDAgJ7AQAA
BAoGF1h9AQAABAZvCgAABgMDbwYAAAZvDAAABgMDbwgAAAZvDgAABioeAigSAAAGKioCAwQFKBIA
AAoqUgJ7EwAACgJ7FAAAChaUbxUAAAoqIgIWKBYAAAoqUgJ7EwAACgJ7FAAACheUbxUAAAoqIgIX
KBYAAAoqOgIYA4waAAABKBcAAAoqWgMsCAIYKBgAAAoqcgEAAHBzGQAACnomAhkDKBcAAAoqWgMs
CAIZKBgAAAoqcgEAAHBzGQAACnomAhoDKBcAAAoqWgMsCAIaKBgAAAoqcgEAAHBzGQAACnoeAiga
AAAKKh4CKBsAAAoqfgIoHAAACgICcxYAAAZ9AgAABAICcxcAAAZ9AwAABCqSBHKeAABwGm8dAAAK
LBUCBQIDKB4AAAoOBHMFAAAGbxQAAAYqSisHAgNvFQAABgNvEAAABi3xKgYqOgIoHwAACgIDfQQA
AAQqOgIoHwAACgIDfQUAAAQqHgIoHwAACiqufgYAAAQtHnKuAABw0AcAAAIoIAAACm8hAAAKcyIA
AAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoeAigjAAAKKi5zHQAABoAIAAAEKgAA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACwGAAAjfgAAmAYAAAAHAAAjU3Ry
aW5ncwAAAACYDQAAIAEAACNVUwC4DgAAEAAAACNHVUlEAAAAyA4AALABAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAgAAAACAAAAAgAAAAeAAAAEwAAACMAAAAQAAAAAQAAAAMA
AAANAAAADgAAAAEAAAAEAAAAAQAAAAAABAMBAAAAAAAGAPsB0wQGAI8C0wQGAEcBwAQPAEcFAAAG
AHQBFQQGAN4BFQQGAL8BFQQGAHYCFQQGABsCFQQGADQCFQQGAIsBFQQGAKYBygIKAE8ClAAKAJIE
lAAOAIMElAAKAF4ElAAKAA0GlAAGANAFzQMGACoBwAQGAKME8wQGAFIEAAQSAPoA7gISAFsB7gIS
AOIA6wMGAA8B0wQGAAEAzQMGACcEzQMGAOcCzQMGAEEEzQMGALUAzQMGAFUAzQMGAPQGFQQAAAAA
KwAAAAAAAQABAAEAEADgAwAAEAABAAEAAQAQAHYEAAA5AAIABQABABAA7wUAAEUAAgASAAEAEADE
BQAASQAEABYAAQAQAIUFAABJAAUAFwAAABAA+gRWBUkABgAYAAABEAC0BVYFYQAIABwAAQDaBnkA
BgDEBXwABgCFBYAAAQD9BYQAAQD9BYQAEQDUA4gAEQDSAIwAEQBFAJAAUCAAAAAAxgCtAgYAAQBY
IAAAAADGALgCBgABAGAgAAAAAMYAuwaUAAEAnCAAAAAAhhizBAYAAgCkIAAAAACGGLMEHwACAK8g
AAAAAIYI4AaaAAUAxCAAAAAAhgilA0EABQDNIAAAAACGCIMAmgAFAOIgAAAAAIYILANBAAUA6yAA
AAAAhgilBgEABQD6IAAAAACGCIgDngAGABEhAAAAAIYIhgYQAAcAGyEAAAAAhghiA54ACAAyIQAA
AACGCG8GEAAJADwhAAAAAIYIRAOeAAoAUyEAAAAAhgDSBkEACwBbIQAAAACGANcFQQALAGMhAAAA
AIYYswQGAAsAgyEAAAAAxgBiBqMACwCoIQAAAADGAVsGlAAPALshAAAAAMYBuwaUABAAvSEAAAAA
hhizBK0AEQDMIQAAAACGGLMErQASANshAAAAAIMYswQGABMA4yEAAAAAkwifBLMAEwAPIgAAAACT
CLoAuAATABYiAAAAAJMIxgC9ABMAHiIAAAAAlgjjBcMAFAAlIgAAAACGGLMEBgAUAC0iAAAAAJEY
uQTIABQAAAABANYGAAABAJgEAAACAI8FAAADAGwEAAABAMQCAAABAMQCAAABAMQCAAABAMQCAAAB
AMQCAAABAMQCAAABADQAAAACAHkAAAADAJgEAAAEAGwEAAABAJgEAAABANYGAAABABMGAAABABMG
AAABAMQCCQCzBAEAEQCzBAYAGQCzBAoAKQCzBBAAMQCzBBAAOQCzBBAAQQCzBBAASQCzBBAAUQCz
BBAAWQCzBBAAYQCzBBAAaQCzBAYAmQCzBAYAuQCzBBUAyQCzBAYAiQCtAgYAiQC4AgYAcQCzBB8A
cQCYBCkAcQCPBS0AeQDkAjEAcQC1AzYAcQDEAzsAcQC8AwEA2QCzBBAAcQDSBkEAcQDXBUEAiQCz
BAYA4QC9BUUAiQCjBUwAkQCzBAYA8QBnAFIA8QDwBlkAoQCzBF8AwQCzBAYALgALAOcALgATAPAA
LgAbAA8BLgAjABgBLgArAEEBLgAzAEEBLgA7AEEBLgBDABgBLgBLAEcBLgBTAEEBLgBbAF4BQwBj
AKgB4wBrAKgBAQF7AKgBaQFzAA8BiQFzAA8BGwADAAEABwALAAgADQAAAOQGzAAAAKkD0AAAAIcA
zAAAADAD0AAAAKkG1AAAAIwD0AAAAIoGzAAAAGYD0AAAAHMGzAAAAEgD0AAAAKME2AAAANoA3QAA
AOcF4gACAAYAAwACAAcABQACAAgABwACAAkACQABAAoACwABAAsADQABAAwADwABAA0AEQABAA4A
EwABAA8AFQACABkAFwACABoAGQABABsAGQACABwAGwAEgAAAAQAAAAAAAAAAAAAAAAAHAAAABAAA
AAAAAAAAAAAAZwA8AAAAAAAQAAAAAAAAAAAAAABwAB0GAAAAABAAAAAAAAAAAAAAAHAAOgYAAAAA
BAAAAAAAAAAAAAAAZwDNAwAAAAAAAAAAAQAAAAQFAAAAAAAAAEludDMyAFNDXzdhMWI0NzI2YTg1
MzRkMTc5ZWRiY2QwYWZhMTFjNWMyADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdElu
c3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBnZXRf
Q3VycmVuY3lOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNDXzdhMWI0NzI2YTg1MzRkMTc5ZWRiY2QwYWZhMTFjNWMyLmRsbABnZXRfQ3Vy
cmVuY3lOYW1lX0lzTnVsbABzZXRfQ3VycmVuY3lOYW1lT3V0cHV0X0lzTnVsbABzZXRfQ3VycmVu
Y3lBbHRlcm5hdGVLZXlPdXRwdXRfSXNOdWxsAHNldF9DdXJyZW5jeUtleU91dHB1dF9Jc051bGwA
Z2V0X0N1cnJlbmN5S2V5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNv
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxp
bmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU0NfN2ExYjQ3MjZhODUzNGQxNzllZGJjZDBhZmExMWM1YzIuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzdhMWI0NzI2YTg1MzRkMTc5ZWRi
Y2QwYWZhMTFjNWMyLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAc2V0X0N1cnJlbmN5TmFtZU91dHB1dABzZXRf
Q3VycmVuY3lBbHRlcm5hdGVLZXlPdXRwdXQAc2V0X0N1cnJlbmN5S2V5T3V0cHV0AElucHV0MF9Q
cm9jZXNzSW5wdXRSb3cATmV4dFJvdwBpbmRleABnZXRfQ3VycmVuY3lLZXkAZ2V0X0Fzc2VtYmx5
AAAAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUA
dAAgADAAAHFTAEMAXwA3AGEAMQBiADQANwAyADYAYQA4ADUAMwA0AGQAMQA3ADkAZQBkAGIAYwBk
ADAAYQBmAGEAMQAxAGMANQBjADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAADbgdNtHVjlHiDA8W18zHGwABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEICSAD
ARI9HQgSQQMGEj0DBh0IBCABDggEIAECCAUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUg
ABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIg
BSABARIMAyAADgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAED
KAAOAygAAgMoAAgECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzdhMWI0NzI2YTg1MzRkMTc5ZWRiY2QwYWZhMTFjNWMy
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAlDMAAAAAAAAAAAAArjMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAzAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA3AGEAMQBiADQANwAyADYAYQA4ADUAMwA0AGQAMQA3ADkAZQBkAGIAYwBkADAAYQBm
AGEAMQAxAGMANQBjADIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAYQAxAGIANAA3
ADIANgBhADgANQAzADQAZAAxADcAOQBlAGQAYgBjAGQAMABhAGYAYQAxADEAYwA1AGMAMgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwBh
ADEAYgA0ADcAMgA2AGEAOAA1ADMANABkADEANwA5AGUAZABiAGMAZAAwAGEAZgBhADEAMQBjADUA
YwAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcAYQAx
AGIANAA3ADIANgBhADgANQAzADQAZAAxADcAOQBlAGQAYgBjAGQAMABhAGYAYQAxADEAYwA1AGMA
MgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAwDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7a1b4726a8534d179edbcd0afa11c5c2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">EB</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[CurrencyKey]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CurrencyKey"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency].Columns[CurrencyKey]"
                      name="CurrencyKey" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Component.Inputs[Input 0].Columns[CurrencyName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CurrencyName"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency].Columns[CurrencyName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyKeyOutput]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyKeyOutput]"
                      name="CurrencyKeyOutput" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyAlternateKeyOutput]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyAlternateKeyOutput]"
                      name="CurrencyAlternateKeyOutput" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyNameOutput]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[CurrencyNameOutput]"
                      name="CurrencyNameOutput" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\XML Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element.;Microsoft Corporation;Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element."
              name="XML Source"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.XmlSourceAdapter</property>
                <property
                  dataType="System.String"
                  description="The XML data used by the XML source adapter."
                  expressionType="Notify"
                  name="XMLData">C:\SSIS\Exercices\MSBIProject\Data\currency.xml</property>
                <property
                  dataType="System.String"
                  description="The variable used by the XML source adapter to specify XML data."
                  name="XMLDataVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Defines how the XML source adapter gets XML data."
                  name="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The XML schema definition used by the XML source adapter."
                  expressionType="Notify"
                  name="XMLSchemaDefinition">C:\SSIS\Exercices\MSBIProject\Data\schema.xsd</property>
                <property
                  dataType="System.Boolean"
                  description="Identifies whether or not to use inline schema."
                  name="UseInlineSchema">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how XML integer types are mapped."
                  name="XMLIntegerMapping"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter">0</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\XML Source.Outputs[Currency]"
                  name="Currency">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Identifies the rowset associated with the output."
                      name="RowsetID">Currency</property>
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency].Columns[CurrencyKey]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\XML Source.Outputs[Currency].ExternalColumns[CurrencyKey]"
                      length="255"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency].Columns[CurrencyKey]"
                      name="CurrencyKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency].Columns[CurrencyName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\XML Source.Outputs[Currency].ExternalColumns[CurrencyName]"
                      length="255"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency].Columns[CurrencyName]"
                      name="CurrencyName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency].ExternalColumns[CurrencyKey]"
                      dataType="wstr"
                      length="255"
                      name="CurrencyKey">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency].ExternalColumns[CurrencyName]"
                      dataType="wstr"
                      length="255"
                      name="CurrencyName">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output]"
                  isErrorOut="true"
                  name="Currency Error Output">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Identifies the rowset associated with the output."
                      name="RowsetID">Currency</property>
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[CurrencyKey]"
                      dataType="nText"
                      externalMetadataColumnId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].ExternalColumns[CurrencyKey]"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[CurrencyKey]"
                      name="CurrencyKey" />
                    <outputColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[CurrencyName]"
                      dataType="nText"
                      externalMetadataColumnId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].ExternalColumns[CurrencyName]"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[CurrencyName]"
                      name="CurrencyName" />
                    <outputColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].ExternalColumns[CurrencyKey]"
                      dataType="nText"
                      name="CurrencyKey" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\XML Source.Outputs[Currency Error Output].ExternalColumns[CurrencyName]"
                      dataType="nText"
                      name="CurrencyName" />
                  </externalMetadataColumns>
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Currency]"
              endId="Package\Data Flow Task\Script Component.Inputs[Input 0]"
              name="Currency"
              startId="Package\Data Flow Task\XML Source.Outputs[Currency]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F1F804C9-C363-4616-BAFE-10687551933A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{74FFDF0D-27FB-4695-85D7-C08C1046244A}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="delete dimcurrency" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9E7476D2-63B1-4D42-956F-5F3B6BD9B8CF}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Data Flow Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153.333333333334,42.6666666666667"
          Id="Package\Data Flow Task"
          TopLeft="626.874971976505,261.368418182858" />
        <NodeLayout
          Size="168,42.6666666666667"
          Id="Package\Execute SQL Task"
          TopLeft="621.249972227962,134.789472204249" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="704.395805435566,177.456138870915">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,83.9122793119427"
              Start="0,0"
              End="0,76.4122793119427">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.4122793119427" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Purger les données dans la table DimCurrency si &#xA;elle est déjà remplie"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="286.666666666667,56"
          Id="db23a1c5-80ca-411c-bc19-31704511d3ad"
          TopLeft="795.624964432792,129.315788053822" />
        <AnnotationLayout
          Text="1. Extraire les données depuis le fichier Xml qui contient les données &#xA;des monnaies &#xA;&#xA;2.Transformer les données pour les ajuster à la structure de la table DimCurrency &#xA;&#xA;3. Chanrger les données dans la table DimCurrency"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="457.333333333334,120"
          Id="77838d04-cf48-41c0-b944-bb5276a04d95"
          TopLeft="786.874964823948,221.684208092267" />
        <AnnotationLayout
          Text="DimCurrency"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="97.3333333333334,40"
          Id="22c69e5f-19af-4cad-8fd7-b259508e3c8c"
          TopLeft="198.124991143123,45.8421047598206" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="693.749968986959,194.315787340135" />
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Data Flow Task\OLE DB Destination"
          TopLeft="695.62496890314,308.578943980285" />
        <NodeLayout
          Size="138,42.6666666666667"
          Id="Package\Data Flow Task\XML Source"
          TopLeft="711.249968204648,75.9473675871656" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="779.68746894505,236.982454006802">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.5964899734832"
              Start="0,0"
              End="0,64.0964899734832">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.0964899734832" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Currency]"
          TopLeft="778.333301929137,118.614034253832">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.7017530863029"
              Start="0,0"
              End="0,68.2017530863029">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.2017530863029" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="1. Extraction des données"
          ParentId="Package\Data Flow Task"
          FontInfo="{assembly:Null}"
          Size="164,40"
          Id="634b4279-c5c2-4557-a6ca-bfbbeba094a8"
          TopLeft="888.74996026978,75.2631570683622" />
        <AnnotationLayout
          Text="2. Transformation des données"
          ParentId="Package\Data Flow Task"
          FontInfo="{assembly:Null}"
          Size="190.666666666667,40"
          Id="96622ff8-b25d-4feb-8be0-59a0504bf81b"
          TopLeft="914.374959124254,197.052629415348" />
        <AnnotationLayout
          Text="3. Chargement des données"
          ParentId="Package\Data Flow Task"
          FontInfo="{assembly:Null}"
          Size="177.333333333334,40"
          Id="b69d8b33-d52b-4837-b57c-2ba009ba46d8"
          TopLeft="967.499956749381,313.368417611908" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>